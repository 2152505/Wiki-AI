人工智能基础2023秋总结

1
从程序情况看，绝大部分同学都经历了做一个完整project的练习，少量同学还没有从前面一二年级课程的学习方法中脱身出来，带动手性质的project虽然复杂度不高，但因为要求所有方面都要会一点，犹如木桶有任何一块短板都不行，类似的，应用虽然简单，但有任何一个版块缺了，整个应用就跑不起来。所以在有限的时间内如何快速学习，是进入专业课程实践练习后需要解决的问题。带实践性质的学习允许不求完整，万千方案中只需优选一两种掌握（这一点可参照指导老师的推荐和必做要求），没用到的可以先跳过或推后，它和理论部分的学习，在方法上是不一样的，同学们应注意总结，寻找适合自己的学习与练习之道。当然，对开发技能的培养，我们也从未指望通过这一门课达成，有的同学入门和掌握得早一些，有的同学晚一些，是正常现象，希望在第6学期结束时能掌握两类典型应用的开发（一类是结合AI/综设课等课程的偏计算机类应用开发，一类是结合机器人/小车/控制系统课/综社课的控制系统开发）。本门课只能说是开了个小头。这方面有欠缺的同学还请寒假自行加强。

一个建议是在大学期间，自己给自己设定一个小目标，比如开发一个具有XXX功能的小设备，或者是开发一套开源软件可以完成XXX功能，但从心态上要针对实际需求有用，不要抱着纯玩玩的学习心态对待之（纯玩或纯学的心态会很容易导致放弃，甚至是把自己的无作为无产出归咎于环境支持不够），心态上要调整到把它认定为是一个将来能够在实际中用起来能产生回报的产品，不是玩具不是演示，或者说是要以创业和产品开发的心态对待之，遇到困难时要想办法，而不是轻易放弃或者是一直怀疑自己，这个点该不该学？客观上来说，凡是影响到实际应用和推广的障碍，都是值得花时间去解决的，不要纠结于是在哪门课中应学，或者complain老师没有教（这一理念也是工程教育专业认证的理念，即毕业授予你本科学位时，你应该具备解决某一类复杂工程问题的能力，而不是以学了哪些课为合格毕业生的标准）。

确定目标之后，然后就持续不断的投入，未必要每周投入大量时间，但要细水长流保持不断，一点点扩展和完善这个小设备小系统的功能，这既是学习和锻炼，也是个人技术职业生涯的积累。这样建议也是因为人的认识是逐渐深化的，这一过程中免不了会有新的想法甚至会返工，但每一次返工并非无意义，它是认识上的螺旋式上升，很多学生有一步到位快速求成的思想，这在现实中是不太可行的，经常会有为什么不一开始规划清楚的抱怨，但实际情况是级别越高面临的问题的不确定性就越高，而人怎么设计怎么抉择脱离不了自己的认知水平，认知不到的时候压上太多要求会吓退初学者，而且也理解不了（当理解不了的时候就会抱怨这个系统为什么搞这么复杂，就会有抵触情绪）。事实上，我们今天之要求，远较企业中对一个工程师的要求低。一两年后再回过头看，就会觉得今天的project其实很简单。所以就自己的产品设计而言，想多了没用，先一点点功能往上堆就好，对较大规模系统和产品开发的把握能力，也是在这一过程中逐渐增强的，多说无益。借用软开界的一句话就是：show me your code, not your words.

例如：北大信息学院有一个实践是游戏AI（因为他们的李文新老师是研究游戏的），那我们的下棋agent能否从两方升级为多方？能够被用来实现群体多agent游戏里的某个角色的控制？游戏的最大价值是对现实世界的模拟与推演，例如经典的simcity游戏，能否自己做个初级版本？并且把自己的agent放进去？（近年流行的方块世界游戏也就是这样的思路）。所以一步步延伸开发，有无尽的空间。

2
总体上来看，project完成的好坏与考试成绩高度相关，在一部分同学身上有不完全对等现象。1位同学属于课程项目好但考试成绩略低，2位同学属于考试成绩好但课程项目略差。对前者，要注意今后加强严谨的习题练习，要注意每个知识点和习题回答的精准性，这种精准性要注意参考教材和PPT等文字性材料中的名词术语和原理说明，头脑里觉得是和落实到文字上的精准表达是两个层面，能用文字讲清楚才是真清楚。后者不排除期末放弃课程项目保考试的做法。我们还是希望各位同学本科阶段能在理论和实践方面均衡发展，特别是一些最基本的动手还是要的，等到四年级做毕业设计的时候再去根据自己的特点和擅长选择偏实践还是偏理论一些也来得及。

3
本学期由于重点放在课程项目上，所以作业方面给与的练习较少（下一届会加强），也影响了答题的准确性，不过教师对此在阅卷时有所考虑。

4
从同学反馈的课程项目投入时间来看，大部分在3-4周，少部分2周多。这个时间投入是比较合适的，可能也有同学投入时间更少，但不好意思写。
一般来说，学习最简单的后端开发应不超过1周，学习前端开发要1-2周，算法部分1-2周，如果完全自己写大致2周，如果借用往上的代码自己看懂了做改进就会短得多（总得有些工作要自己完全写）。但是如果有同学抱着大部头教程去啃，希望像学理论课那样彻底搞明白再动手，而不是去阅读和运行已有各种例程，入门时间就会长一些。此外，到12月份第1次会议时，大部分同学进展缓慢，有的同学甚至开发软件还没有下载和安装，以后遇到类似要求还是要提早动手。今年原计划还要开展一个增强学习的实践，最后也只能放弃。

考试经常可以突击，但工程能力是突击不来的，它需要自己长时间的细水长流式的投入，而且一定要自己走一遍流程（其实计算机类的学习素材在网上是最丰富的，关键是要早点动手，不能只看不练，这方面并不难）。

考虑到第5学期的课程配备，今后在第5学期维持软硬件各一个课程项目（AI课要求一个软件项目，智能芯片课要求一个硬件项目），总体上还是很得当的。

5 
在看报告时发现有1位同学的思路有点出偏，前期在线交流没有发现，从长远来看这不是什么大问题，但是，从这门课的要求来说，我们希望本课程规定的基本要求要先完成，再去考虑创新。因为基本要求的设计是覆盖了本领域基本的原理和思想要点，这也是我们在考评要求中一再强调要完成必做要求的原因。此外，对所选技术路线，也是摈弃了实际中不常用的方案，而选择了那些最常用、业界资料最丰富、容易自学的方案，是未来在其他课程项目甚至实习、工作中实际可用的。部分新的软件和手段在没有真正流行起来、为企业所普遍接受时，按我的风格，一般不会被选来作为课程项目的推荐，因为今天学了可能将来会因它没有流行起来而徒费精力。所以在选型问题上，可以适当保守。

